AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for IoT data processing with Kafka and Spark'

Parameters:
  KafkaClientSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for Kafka clients

Resources:
  # S3 Buckets
  ParquetDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-parquet-data'

  ScriptsAndCheckpointsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-scripts-and-checkpoints'

  # IoT Core Rule
  IoTRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: !Sub '${AWS::StackName}-to-msk-rule'
      TopicRulePayload:
        SQL: "SELECT * FROM 'iot/device/+'"
        Actions:
          - Kafka:
              DestinationArn: !GetAtt MSKCluster.Arn
              Topic: 'iot-data'
              ClientProperties:
                BootstrapServers: !GetAtt MSKCluster.BootstrapBrokers

  # MSK Cluster
  MSKCluster:
    Type: AWS::MSK::Cluster
    Properties:
      ClusterName: !Sub '${AWS::StackName}-msk-cluster'
      KafkaVersion: '2.8.1'
      NumberOfBrokerNodes: 3
      BrokerNodeGroupInfo:
        InstanceType: kafka.t3.small
        ClientSubnets: !Ref KafkaClientSubnets
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 100

  # EMR Cluster
  EMRCluster:
    Type: AWS::EMR::Cluster
    Properties:
      Name: !Sub '${AWS::StackName}-emr-cluster'
      ReleaseLabel: 'emr-6.5.0'
      Applications:
        - Name: Spark
        - Name: Hadoop
      Instances:
        MasterInstanceGroup:
          InstanceCount: 1
          InstanceType: m5.xlarge
        CoreInstanceGroup:
          InstanceCount: 2
          InstanceType: m5.xlarge
        Ec2SubnetId: !Select [0, !Ref KafkaClientSubnets]
      JobFlowRole: !Ref EMRInstanceProfile
      ServiceRole: !Ref EMRServiceRole

  # SageMaker Notebook Instance
  SageMakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: 'ml.t3.medium'
      RoleArn: !GetAtt SageMakerRole.Arn
      NotebookInstanceName: !Sub '${AWS::StackName}-notebook'

  # Athena Workgroup
  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: !Sub '${AWS::StackName}-workgroup'
      Description: 'Workgroup for querying IoT data'
      State: ENABLED
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub 's3://${ParquetDataBucket}/athena-results/'

  # IAM Roles
  EMRServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticmapreduce.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole

  EMRInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EMRInstanceRole

  EMRInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${ParquetDataBucket}/*'
                  - !Sub 'arn:aws:s3:::${ScriptsAndCheckpointsBucket}/*'

  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 'arn:aws:s3:::${ParquetDataBucket}/*'
                  - !Sub 'arn:aws:s3:::${ScriptsAndCheckpointsBucket}/*'

  # Step Functions State Machine
  StepFunctionsStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StepFunctionsRole.Arn
      DefinitionString: !Sub 
        - |-
          {
            "Comment": "IoT Data Processing and Model Training",
            "StartAt": "Start EMR Job",
            "States": {
              "Start EMR Job": {
                "Type": "Task",
                "Resource": "arn:aws:states:::elasticmapreduce:addStep.sync",
                "Parameters": {
                  "ClusterId": "${EMRClusterId}",
                  "Step": {
                    "Name": "Spark Streaming Job",
                    "ActionOnFailure": "CONTINUE",
                    "HadoopJarStep": {
                      "Jar": "command-runner.jar",
                      "Args": [
                        "spark-submit",
                        "--deploy-mode",
                        "cluster",
                        "s3://${ScriptsBucket}/emr_spark_job.py"
                      ]
                    }
                  }
                },
                "Next": "Train SageMaker Model"
              },
              "Train SageMaker Model": {
                "Type": "Task",
                "Resource": "arn:aws:states:::sagemaker:createTrainingJob.sync",
                "Parameters": {
                  "TrainingJobName": "IoT-Anomaly-Detection-Job",
                  "AlgorithmSpecification": {
                    "TrainingImage": "${SageMakerTrainingImage}",
                    "TrainingInputMode": "File"
                  },
                  "RoleArn": "${SageMakerRoleArn}",
                  "InputDataConfig": [
                    {
                      "ChannelName": "train",
                      "DataSource": {
                        "S3DataSource": {
                          "S3DataType": "S3Prefix",
                          "S3Uri": "s3://${ParquetBucket}/"
                        }
                      }
                    }
                  ],
                  "OutputDataConfig": {
                    "S3OutputPath": "s3://${ParquetBucket}/model-output/"
                  },
                  "ResourceConfig": {
                    "InstanceCount": 1,
                    "InstanceType": "ml.m5.xlarge",
                    "VolumeSizeInGB": 30
                  },
                  "StoppingCondition": {
                    "MaxRuntimeInSeconds": 86400
                  }
                },
                "End": true
              }
            }
          }
        - EMRClusterId: !Ref EMRCluster
          ScriptsBucket: !Ref ScriptsAndCheckpointsBucket
          SageMakerTrainingImage: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/sagemaker-scikit-learn:0.23-1-cpu-py3'
          SageMakerRoleArn: !GetAtt SageMakerRole.Arn
          ParquetBucket: !Ref ParquetDataBucket

  StepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - elasticmapreduce:AddJobFlowSteps
                  - elasticmapreduce:DescribeStep
                  - elasticmapreduce:CancelSteps
                Resource: '*'
              - Effect: Allow
                Action:
                  - sagemaker:CreateTrainingJob
                  - sagemaker:DescribeTrainingJob
                  - sagemaker:StopTrainingJob
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt EMRServiceRole.Arn
                  - !GetAtt SageMakerRole.Arn

Outputs:
  ParquetDataBucketName:
    Description: 'Name of the S3 bucket for Parquet data'
    Value: !Ref ParquetDataBucket
  ScriptsAndCheckpointsBucketName:
    Description: 'Name of the S3 bucket for scripts and checkpoints'
    Value: !Ref ScriptsAndCheckpointsBucket
  MSKClusterArn:
    Description: 'ARN of the MSK Cluster'
    Value: !GetAtt MSKCluster.Arn
  EMRClusterId:
    Description: 'ID of the EMR Cluster'
    Value: !Ref EMRCluster
  SageMakerNotebookInstanceName:
    Description: 'Name of the SageMaker Notebook Instance'
    Value: !Ref SageMakerNotebookInstance
  AthenaWorkgroupName:
    Description: 'Name of the Athena Workgroup'
    Value: !Ref AthenaWorkgroup
  StepFunctionsStateMachineArn:
    Description: 'ARN of the Step Functions State Machine'
    Value: !Ref StepFunctionsStateMachine